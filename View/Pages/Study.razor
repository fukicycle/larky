@page "/study"
@inject StudyService StudyService
<Animate Animation="Animations.Fade" class="animation-wrapper">
    <div class="wrapper">
        @if (currentWord == null || pager == null)
        {
            <div class="loading">
                <Loader />
            </div>
        }
        else
        {
            <div class="contents">
                <WordCard Word="@currentWord" />
            </div>
        }
        <div class="actions">
            <button class="btn" disabled=@(pager?.CanGoPrev() != true) @onclick=@GoPrev>前へ</button>
            <button class="btn" disabled=@(pager?.CanGoNext() != true) @onclick=@GoNext>次へ</button>
        </div>
    </div>
</Animate>
@code {
    [Inject(Key = nameof(FirebaseScheme.Words))]
    public IRepository<WordDTO> WordRepository { get; set; } = null!;
    private WordDTO? currentWord { get; set; }
    private Pager<WordDTO>? pager { get; set; }
    protected override async Task OnInitializedAsync()
    {
        //await StudyService.InitializeAsync();
        var results = await WordRepository.GetItemsAsync();
        pager = new Pager<WordDTO>(results);
        currentWord = pager.CurrentValue;
    }

    private void GoNext()
    {
        if (pager?.CanGoNext() == true)
        {
            pager.Next();
            currentWord = pager.CurrentValue;
        }
    }

    private void GoPrev()
    {
        if (pager?.CanGoPrev() == true)
        {
            pager.Prev();
            currentWord = pager.CurrentValue;
        }
    }
}